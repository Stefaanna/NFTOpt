/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTOpt, NFTOptInterface } from "../../contracts/NFTOpt";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Fallback",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_optionId",
        type: "uint32",
      },
    ],
    name: "cancelOption",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_optionId",
        type: "uint32",
      },
    ],
    name: "createOption",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_optionId",
        type: "uint32",
      },
    ],
    name: "exerciseOption",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optionID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "options",
    outputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nftId",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "startDate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "interval",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "enum NFTOpt.OptionFlavor",
        name: "flavor",
        type: "uint8",
      },
      {
        internalType: "enum NFTOpt.OptionState",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nftId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_interval",
        type: "uint32",
      },
      {
        internalType: "enum NFTOpt.OptionFlavor",
        name: "_flavor",
        type: "uint8",
      },
    ],
    name: "publishOptionRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_optionId",
        type: "uint32",
      },
    ],
    name: "withdrawOptionRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611234806100206000396000f3fe60806040526004361061007f5760003560e01c80635a3ddf221161004e5780635a3ddf22146101b25780636e89319a146101ce578063d0a3021e146101ea578063dd3ebfd414610206576100bf565b806312065fe0146100fa57806318b7edeb14610125578063292a274f14610150578063409e22051461016c576100bf565b366100bf577f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587433346040516100b59291906109ae565b60405180910390a1005b7ffbf15a1bae5e021d024841007b692b167afd2a281a4ff0b44f47387eb388205c33346040516100f09291906109ae565b60405180910390a1005b34801561010657600080fd5b5061010f610222565b60405161011c91906109d7565b60405180910390f35b34801561013157600080fd5b5061013a61022a565b60405161014791906109d7565b60405180910390f35b61016a60048036038101906101659190610a33565b610230565b005b34801561017857600080fd5b50610193600480360381019061018e9190610a8c565b610233565b6040516101a99a99989796959493929190610b87565b60405180910390f35b6101cc60048036038101906101c79190610a33565b610331565b005b6101e860048036038101906101e39190610a33565b610334565b005b61020460048036038101906101ff9190610a33565b610337565b005b610220600480360381019061021b9190610c74565b61033a565b005b600047905090565b60005481565b50565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900463ffffffff16908060020160189054906101000a900463ffffffff169080600201601c9054906101000a900463ffffffff16908060030154908060040154908060050160009054906101000a900460ff16908060050160019054906101000a900460ff1690508a565b50565b50565b50565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036103a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a090610d72565b60405180910390fd5b60008463ffffffff16116103f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e990610dde565b60405180910390fd5b6103fb856108a1565b61043a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043190610e70565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b815260040161048a9190610ecb565b602060405180830381865afa1580156104a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cb9190610efb565b73ffffffffffffffffffffffffffffffffffffffff1614610521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051890610fc0565b60405180910390fd5b60003411610564576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055b9061102c565b60405180910390fd5b600083116105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059e90611098565b60405180910390fd5b60008263ffffffff16116105f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e790611104565b60405180910390fd5b6040518061014001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018563ffffffff168152602001600063ffffffff1681526020018363ffffffff16815260200134815260200184815260200182600181111561069557610694610ac8565b5b8152602001600060028111156106ae576106ad610ac8565b5b8152506001600080600081546106c390611153565b919050819055815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160186101000a81548163ffffffff021916908363ffffffff16021790555060a082015181600201601c6101000a81548163ffffffff021916908363ffffffff16021790555060c0820151816003015560e082015181600401556101008201518160050160006101000a81548160ff0219169083600181111561086157610860610ac8565b5b02179055506101208201518160050160016101000a81548160ff0219169083600281111561089257610891610ac8565b5b02179055509050505050505050565b60008060007f6352211e6566aa027e75ac9dbf2423197fbd9b82b9d981a3ab367d355866aa1c60006040516024016108d991906111e3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000808251602084016000886000f19150811592505050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061097f82610954565b9050919050565b61098f81610974565b82525050565b6000819050919050565b6109a881610995565b82525050565b60006040820190506109c36000830185610986565b6109d0602083018461099f565b9392505050565b60006020820190506109ec600083018461099f565b92915050565b600080fd5b600063ffffffff82169050919050565b610a10816109f7565b8114610a1b57600080fd5b50565b600081359050610a2d81610a07565b92915050565b600060208284031215610a4957610a486109f2565b5b6000610a5784828501610a1e565b91505092915050565b610a6981610995565b8114610a7457600080fd5b50565b600081359050610a8681610a60565b92915050565b600060208284031215610aa257610aa16109f2565b5b6000610ab084828501610a77565b91505092915050565b610ac2816109f7565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610b0857610b07610ac8565b5b50565b6000819050610b1982610af7565b919050565b6000610b2982610b0b565b9050919050565b610b3981610b1e565b82525050565b60038110610b5057610b4f610ac8565b5b50565b6000819050610b6182610b3f565b919050565b6000610b7182610b53565b9050919050565b610b8181610b66565b82525050565b600061014082019050610b9d600083018d610986565b610baa602083018c610986565b610bb7604083018b610986565b610bc4606083018a610ab9565b610bd16080830189610ab9565b610bde60a0830188610ab9565b610beb60c083018761099f565b610bf860e083018661099f565b610c06610100830185610b30565b610c14610120830184610b78565b9b9a5050505050505050505050565b610c2c81610974565b8114610c3757600080fd5b50565b600081359050610c4981610c23565b92915050565b60028110610c5c57600080fd5b50565b600081359050610c6e81610c4f565b92915050565b600080600080600060a08688031215610c9057610c8f6109f2565b5b6000610c9e88828901610c3a565b9550506020610caf88828901610a1e565b9450506040610cc088828901610a77565b9350506060610cd188828901610a1e565b9250506080610ce288828901610c5f565b9150509295509295909350565b600082825260208201905092915050565b7f4e465420636f6e7472616374206d75737420626520612076616c69642061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610d5c602483610cef565b9150610d6782610d00565b604082019050919050565b60006020820190508181036000830152610d8b81610d4f565b9050919050565b7f4e465420746f6b656e204944206d757374206265203e20300000000000000000600082015250565b6000610dc8601883610cef565b9150610dd382610d92565b602082019050919050565b60006020820190508181036000830152610df781610dbb565b9050919050565b7f50726f7669646564204e465420636f6e74726163742061646472657373206d7560008201527f737420696d706c656d656e74204552432d37323120696e746572666163650000602082015250565b6000610e5a603e83610cef565b9150610e6582610dfe565b604082019050919050565b60006020820190508181036000830152610e8981610e4d565b9050919050565b6000819050919050565b6000610eb5610eb0610eab846109f7565b610e90565b610995565b9050919050565b610ec581610e9a565b82525050565b6000602082019050610ee06000830184610ebc565b92915050565b600081519050610ef581610c23565b92915050565b600060208284031215610f1157610f106109f2565b5b6000610f1f84828501610ee6565b91505092915050565b7f4f776e657273686970206f6620737065636966696564204e465420746f6b656e60008201527f20697320756e646572206120646966666572656e742077616c6c65742074686160208201527f6e207468652063616c6c65722773000000000000000000000000000000000000604082015250565b6000610faa604e83610cef565b9150610fb582610f28565b606082019050919050565b60006020820190508181036000830152610fd981610f9d565b9050919050565b7f5072656d69756d206d757374206265203e203000000000000000000000000000600082015250565b6000611016601383610cef565b915061102182610fe0565b602082019050919050565b6000602082019050818103600083015261104581611009565b9050919050565b7f537472696b65207072696365206d757374206265203e20300000000000000000600082015250565b6000611082601883610cef565b915061108d8261104c565b602082019050919050565b600060208201905081810360008301526110b181611075565b9050919050565b7f45787069726174696f6e20696e74657276616c206d757374206265203e203000600082015250565b60006110ee601f83610cef565b91506110f9826110b8565b602082019050919050565b6000602082019050818103600083015261111d816110e1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061115e82610995565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036111905761118f611124565b5b600182019050919050565b6000819050919050565b600060ff82169050919050565b60006111cd6111c86111c38461119b565b610e90565b6111a5565b9050919050565b6111dd816111b2565b82525050565b60006020820190506111f860008301846111d4565b9291505056fea264697066735822122029cbc05552f47ea4f950c0c35e2a961d34922e81fc142789ba0c3210a7bc0b4864736f6c634300080e0033";

type NFTOptConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTOptConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTOpt__factory extends ContractFactory {
  constructor(...args: NFTOptConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTOpt> {
    return super.deploy(overrides || {}) as Promise<NFTOpt>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTOpt {
    return super.attach(address) as NFTOpt;
  }
  override connect(signer: Signer): NFTOpt__factory {
    return super.connect(signer) as NFTOpt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTOptInterface {
    return new utils.Interface(_abi) as NFTOptInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFTOpt {
    return new Contract(address, _abi, signerOrProvider) as NFTOpt;
  }
}
