/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTOpt, NFTOptInterface } from "../../contracts/NFTOpt";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Filled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_optionId",
        type: "uint32",
      },
    ],
    name: "cancelOption",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_optionId",
        type: "uint32",
      },
    ],
    name: "createOption",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_optionId",
        type: "uint32",
      },
    ],
    name: "exerciseOption",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optionID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "options",
    outputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "enum NFTOpt.OptionFlavor",
        name: "flavor",
        type: "uint8",
      },
      {
        internalType: "enum NFTOpt.OptionState",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interval",
        type: "uint256",
      },
      {
        internalType: "enum NFTOpt.OptionFlavor",
        name: "_flavor",
        type: "uint8",
      },
    ],
    name: "publishOptionRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_optionId",
        type: "uint32",
      },
    ],
    name: "withdrawOptionRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611574806100206000396000f3fe60806040526004361061007b5760003560e01c8063409e22051161004e578063409e22051461010e5780635a3ddf22146101545780636e89319a14610170578063d0a3021e1461018c5761007b565b806312065fe01461008057806318b7edeb146100ab5780631d973ac5146100d6578063292a274f146100f2575b600080fd5b34801561008c57600080fd5b506100956101a8565b6040516100a29190610ca4565b60405180910390f35b3480156100b757600080fd5b506100c06101b0565b6040516100cd9190610ca4565b60405180910390f35b6100f060048036038101906100eb9190610d73565b6101b6565b005b61010c60048036038101906101079190610e2a565b6103fe565b005b34801561011a57600080fd5b5061013560048036038101906101309190610e57565b610446565b60405161014b9a99989796959493929190610f52565b60405180910390f35b61016e60048036038101906101699190610e2a565b610514565b005b61018a60048036038101906101859190610e2a565b610517565b005b6101a660048036038101906101a19190610e2a565b610c88565b005b600047905090565b60005481565b6040518061014001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020016000815260200183815260200134815260200184815260200182600181111561024957610248610e93565b5b81526020016000600281111561026257610261610e93565b5b8152506001600080600081546102779061101d565b919050819055815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff021916908360018111156103be576103bd610e93565b5b02179055506101208201518160080160016101000a81548160ff021916908360028111156103ef576103ee610e93565b5b02179055509050505050505050565b6002600160008363ffffffff16815260200190815260200160002060080160016101000a81548160ff0219169083600281111561043e5761043d610e93565b5b021790555050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050154908060060154908060070154908060080160009054906101000a900460ff16908060080160019054906101000a900460ff1690508a565b50565b6000600160008363ffffffff168152602001908152602001600020604051806101400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16600181111561069757610696610e93565b5b60018111156106a9576106a8610e93565b5b81526020016008820160019054906101000a900460ff1660028111156106d2576106d1610e93565b5b60028111156106e4576106e3610e93565b5b815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff160361075d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610754906110e8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16146107d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c79061117a565b60405180910390fd5b600060028111156107e4576107e3610e93565b5b81610120015160028111156107fc576107fb610e93565b5b1461083c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108339061120c565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16036108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a590611278565b60405180910390fd5b8060e001513373ffffffffffffffffffffffffffffffffffffffff1631101561090c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109039061130a565b60405180910390fd5b8060c001516109196101a8565b101561095a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109519061139c565b60405180910390fd5b8060e0015134146109a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099790611408565b60405180910390fd5b33816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505042816080018181525050600181610120019060028111156109fc576109fb610e93565b5b90816002811115610a1057610a0f610e93565b5b8152505080600160008463ffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff02191690836001811115610b6157610b60610e93565b5b02179055506101208201518160080160016101000a81548160ff02191690836002811115610b9257610b91610e93565b5b021790555090505060003373ffffffffffffffffffffffffffffffffffffffff168260c00151604051610bc490611459565b60006040518083038185875af1925050503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b5050905080610c4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c41906114ba565b60405180910390fd5b7fd37cf472a3f5580ea615126f95c25aaaea8c85b6b4036f6430c35a151812c8553384604051610c7b929190611515565b60405180910390a1505050565b50565b6000819050919050565b610c9e81610c8b565b82525050565b6000602082019050610cb96000830184610c95565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cef82610cc4565b9050919050565b610cff81610ce4565b8114610d0a57600080fd5b50565b600081359050610d1c81610cf6565b92915050565b610d2b81610c8b565b8114610d3657600080fd5b50565b600081359050610d4881610d22565b92915050565b60028110610d5b57600080fd5b50565b600081359050610d6d81610d4e565b92915050565b600080600080600060a08688031215610d8f57610d8e610cbf565b5b6000610d9d88828901610d0d565b9550506020610dae88828901610d39565b9450506040610dbf88828901610d39565b9350506060610dd088828901610d39565b9250506080610de188828901610d5e565b9150509295509295909350565b600063ffffffff82169050919050565b610e0781610dee565b8114610e1257600080fd5b50565b600081359050610e2481610dfe565b92915050565b600060208284031215610e4057610e3f610cbf565b5b6000610e4e84828501610e15565b91505092915050565b600060208284031215610e6d57610e6c610cbf565b5b6000610e7b84828501610d39565b91505092915050565b610e8d81610ce4565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610ed357610ed2610e93565b5b50565b6000819050610ee482610ec2565b919050565b6000610ef482610ed6565b9050919050565b610f0481610ee9565b82525050565b60038110610f1b57610f1a610e93565b5b50565b6000819050610f2c82610f0a565b919050565b6000610f3c82610f1e565b9050919050565b610f4c81610f31565b82525050565b600061014082019050610f68600083018d610e84565b610f75602083018c610e84565b610f82604083018b610e84565b610f8f606083018a610c95565b610f9c6080830189610c95565b610fa960a0830188610c95565b610fb660c0830187610c95565b610fc360e0830186610c95565b610fd1610100830185610efb565b610fdf610120830184610f43565b9b9a5050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061102882610c8b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361105a57611059610fee565b5b600182019050919050565b600082825260208201905092915050565b7f4f7074696f6e2077697468207468652073706563696669656420696420646f6560008201527f73206e6f74206578697374000000000000000000000000000000000000000000602082015250565b60006110d2602b83611065565b91506110dd82611076565b604082019050919050565b60006020820190508181036000830152611101816110c5565b9050919050565b7f4f7074696f6e20697320616c72656164792066756c66696c6c6564206279206160008201527f2073656c6c657200000000000000000000000000000000000000000000000000602082015250565b6000611164602783611065565b915061116f82611108565b604082019050919050565b6000602082019050818103600083015261119381611157565b9050919050565b7f4f7074696f6e206973206e6f7420696e2074686520726571756573742073746160008201527f7465000000000000000000000000000000000000000000000000000000000000602082015250565b60006111f6602283611065565b91506112018261119a565b604082019050919050565b60006020820190508181036000830152611225816111e9565b9050919050565b7f53656c6c6572206973207468652073616d652061732062757965720000000000600082015250565b6000611262601b83611065565b915061126d8261122c565b602082019050919050565b6000602082019050818103600083015261129181611255565b9050919050565b7f53656c6c657220646f6573206e6f74206861766520656e6f7567682062616c6160008201527f6e63650000000000000000000000000000000000000000000000000000000000602082015250565b60006112f4602383611065565b91506112ff82611298565b604082019050919050565b60006020820190508181036000830152611323816112e7565b9050919050565b7f4e6f7420656e6f7567682066756e647320746f2070617920746865207072656d60008201527f69756d20746f207468652073656c6c6572000000000000000000000000000000602082015250565b6000611386603183611065565b91506113918261132a565b604082019050919050565b600060208201905081810360008301526113b581611379565b9050919050565b7f57726f6e6720737472696b652070726963652070726f76696465640000000000600082015250565b60006113f2601b83611065565b91506113fd826113bc565b602082019050919050565b60006020820190508181036000830152611421816113e5565b9050919050565b600081905092915050565b50565b6000611443600083611428565b915061144e82611433565b600082019050919050565b600061146482611436565b9150819050919050565b7f5472616e73616374696f6e206661696c65640000000000000000000000000000600082015250565b60006114a4601283611065565b91506114af8261146e565b602082019050919050565b600060208201905081810360008301526114d381611497565b9050919050565b6000819050919050565b60006114ff6114fa6114f584610dee565b6114da565b610c8b565b9050919050565b61150f816114e4565b82525050565b600060408201905061152a6000830185610e84565b6115376020830184611506565b939250505056fea2646970667358221220ae7db799b8bdef4bf9aa2912bf90e644d73a08d649c03ba8204d636c5bb7f9fa64736f6c634300080e0033";

type NFTOptConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTOptConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTOpt__factory extends ContractFactory {
  constructor(...args: NFTOptConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTOpt> {
    return super.deploy(overrides || {}) as Promise<NFTOpt>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTOpt {
    return super.attach(address) as NFTOpt;
  }
  override connect(signer: Signer): NFTOpt__factory {
    return super.connect(signer) as NFTOpt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTOptInterface {
    return new utils.Interface(_abi) as NFTOptInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFTOpt {
    return new Contract(address, _abi, signerOrProvider) as NFTOpt;
  }
}
