/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTOpt, NFTOptInterface } from "../../contracts/NFTOpt";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expirationTimestamp",
        type: "uint256",
      },
    ],
    name: "EXERCISE_WINDOW_IS_CLOSED",
    type: "error",
  },
  {
    inputs: [],
    name: "INSUFFICIENT_FUNDS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "providedId",
        type: "uint32",
      },
    ],
    name: "INVALID_OPTION_ID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum NFTOpt.OptionState",
        name: "currentState",
        type: "uint8",
      },
      {
        internalType: "enum NFTOpt.OptionState",
        name: "neededState",
        type: "uint8",
      },
    ],
    name: "INVALID_OPTION_STATE",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nftId",
        type: "uint32",
      },
    ],
    name: "NFT_NOT_APPROVED",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "providedAddress",
        type: "address",
      },
    ],
    name: "NOT_AUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Exercised",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Fallback",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "NewRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_optionId",
        type: "uint32",
      },
    ],
    name: "cancelOption",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_optionId",
        type: "uint32",
      },
    ],
    name: "createOption",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_optionId",
        type: "uint32",
      },
    ],
    name: "exerciseOption",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optionID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "options",
    outputs: [
      {
        internalType: "address payable",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nftId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "interval",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "enum NFTOpt.OptionFlavor",
        name: "flavor",
        type: "uint8",
      },
      {
        internalType: "enum NFTOpt.OptionState",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nftId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_interval",
        type: "uint32",
      },
      {
        internalType: "enum NFTOpt.OptionFlavor",
        name: "_flavor",
        type: "uint8",
      },
    ],
    name: "publishOptionRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_optionId",
        type: "uint32",
      },
    ],
    name: "withdrawOptionRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c47806100206000396000f3fe60806040526004361061007f5760003560e01c80635a3ddf221161004e5780635a3ddf22146101b25780636e89319a146101ce578063d0a3021e146101ea578063dd3ebfd414610206576100bf565b806312065fe0146100fa57806318b7edeb14610125578063292a274f14610150578063409e22051461016c576100bf565b366100bf577f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587433346040516100b5929190611202565b60405180910390a1005b7ffbf15a1bae5e021d024841007b692b167afd2a281a4ff0b44f47387eb388205c33346040516100f0929190611202565b60405180910390a1005b34801561010657600080fd5b5061010f610222565b60405161011c919061122b565b60405180910390f35b34801561013157600080fd5b5061013a61022a565b604051610147919061122b565b60405180910390f35b61016a60048036038101906101659190611287565b610230565b005b34801561017857600080fd5b50610193600480360381019061018e91906112e0565b610233565b6040516101a99a999897969594939291906113fc565b60405180910390f35b6101cc60048036038101906101c79190611287565b610321565b005b6101e860048036038101906101e39190611287565b610324565b005b61020460048036038101906101ff9190611287565b6103e4565b005b610220600480360381019061021b91906114e9565b610b76565b005b600047905090565b60005481565b50565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900463ffffffff16908060030154908060040160009054906101000a900463ffffffff16908060050154908060060154908060070160009054906101000a900460ff16908060070160019054906101000a900460ff1690508a565b50565b6000600160008363ffffffff1681526020019081526020016000209050338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160070160016101000a81548160ff021916908360028111156103ac576103ab61133d565b5b021790555042816003018190555062093a808160040160006101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600160008363ffffffff168152602001908152602001600020604051806101400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600382015481526020016004820160009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff16600181111561059c5761059b61133d565b5b60018111156105ae576105ad61133d565b5b81526020016007820160019054906101000a900460ff1660028111156105d7576105d661133d565b5b60028111156105e9576105e861133d565b5b815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff160361066457816040517f623e1d8e00000000000000000000000000000000000000000000000000000000815260040161065b9190611564565b60405180910390fd5b600160028111156106785761067761133d565b5b81610120015160028111156106905761068f61133d565b5b146106da5780610120015160016040517f4e846bc10000000000000000000000000000000000000000000000000000000081526004016106d192919061157f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461074e57336040517f2bc10c3300000000000000000000000000000000000000000000000000000000815260040161074591906115a8565b60405180910390fd5b6000816040015190503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e84606001516040518263ffffffff1660e01b81526004016107ab91906115fe565b602060405180830381865afa1580156107c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ec919061162e565b73ffffffffffffffffffffffffffffffffffffffff1614610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083990611704565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc84606001516040518263ffffffff1660e01b815260040161089691906115fe565b602060405180830381865afa1580156108b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d7919061162e565b73ffffffffffffffffffffffffffffffffffffffff161461093957816040015182606001516040517f983c7256000000000000000000000000000000000000000000000000000000008152600401610930929190611724565b60405180910390fd5b60008260a0015163ffffffff168360800151610955919061177c565b9050804211806109a75750600060018111156109745761097361133d565b5b836101000151600181111561098c5761098b61133d565b5b1480156109a657504262015180826109a491906117d2565b115b5b156109e957806040517fa86940000000000000000000000000000000000000000000000000000000000081526004016109e0919061122b565b60405180910390fd5b8260e001516109f6610222565b1015610a2e576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826000015173ffffffffffffffffffffffffffffffffffffffff166108fc8460e001519081150290604051600060405180830381858888f19350505050158015610a7c573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff166323b872dd33856020015186606001516040518463ffffffff1660e01b8152600401610ac29392919061185b565b600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b505050506002600160008663ffffffff16815260200190815260200160002060070160016101000a81548160ff02191690836002811115610b3457610b3361133d565b5b02179055507fab5902d9f67582740e0b0abe7223a40464a07788192b1ff0c9f1df61799bdbf384604051610b6891906115fe565b60405180910390a150505050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610be5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdc90611904565b60405180910390fd5b60008463ffffffff1611610c2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2590611970565b60405180910390fd5b610c37856110f5565b610c76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6d90611a02565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b8152600401610cc691906115fe565b602060405180830381865afa158015610ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d07919061162e565b73ffffffffffffffffffffffffffffffffffffffff1614610d5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5490611704565b60405180910390fd5b60003411610da0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9790611a6e565b60405180910390fd5b60008311610de3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dda90611ada565b60405180910390fd5b60008263ffffffff1611610e2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2390611b46565b60405180910390fd5b6040518061014001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018563ffffffff168152602001600081526020018363ffffffff168152602001348152602001848152602001826001811115610ecb57610eca61133d565b5b815260200160006002811115610ee457610ee361133d565b5b815250600160008060008154610ef990611b66565b919050819055815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548163ffffffff021916908363ffffffff1602179055506080820151816003015560a08201518160040160006101000a81548163ffffffff021916908363ffffffff16021790555060c0820151816005015560e082015181600601556101008201518160070160006101000a81548160ff0219169083600181111561107a5761107961133d565b5b02179055506101208201518160070160016101000a81548160ff021916908360028111156110ab576110aa61133d565b5b02179055509050507f09ade4ab65fc69d5629748282653ae32dedf754cecbe7a71b31c153f8675de78336000546040516110e6929190611202565b60405180910390a15050505050565b60008060007f6352211e6566aa027e75ac9dbf2423197fbd9b82b9d981a3ab367d355866aa1c600060405160240161112d9190611bf6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000808251602084016000886000f19150811592505050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111d3826111a8565b9050919050565b6111e3816111c8565b82525050565b6000819050919050565b6111fc816111e9565b82525050565b600060408201905061121760008301856111da565b61122460208301846111f3565b9392505050565b600060208201905061124060008301846111f3565b92915050565b600080fd5b600063ffffffff82169050919050565b6112648161124b565b811461126f57600080fd5b50565b6000813590506112818161125b565b92915050565b60006020828403121561129d5761129c611246565b5b60006112ab84828501611272565b91505092915050565b6112bd816111e9565b81146112c857600080fd5b50565b6000813590506112da816112b4565b92915050565b6000602082840312156112f6576112f5611246565b5b6000611304848285016112cb565b91505092915050565b6000611318826111a8565b9050919050565b6113288161130d565b82525050565b6113378161124b565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061137d5761137c61133d565b5b50565b600081905061138e8261136c565b919050565b600061139e82611380565b9050919050565b6113ae81611393565b82525050565b600381106113c5576113c461133d565b5b50565b60008190506113d6826113b4565b919050565b60006113e6826113c8565b9050919050565b6113f6816113db565b82525050565b600061014082019050611412600083018d61131f565b61141f602083018c61131f565b61142c604083018b6111da565b611439606083018a61132e565b61144660808301896111f3565b61145360a083018861132e565b61146060c08301876111f3565b61146d60e08301866111f3565b61147b6101008301856113a5565b6114896101208301846113ed565b9b9a5050505050505050505050565b6114a1816111c8565b81146114ac57600080fd5b50565b6000813590506114be81611498565b92915050565b600281106114d157600080fd5b50565b6000813590506114e3816114c4565b92915050565b600080600080600060a0868803121561150557611504611246565b5b6000611513888289016114af565b955050602061152488828901611272565b9450506040611535888289016112cb565b935050606061154688828901611272565b9250506080611557888289016114d4565b9150509295509295909350565b6000602082019050611579600083018461132e565b92915050565b600060408201905061159460008301856113ed565b6115a160208301846113ed565b9392505050565b60006020820190506115bd60008301846111da565b92915050565b6000819050919050565b60006115e86115e36115de8461124b565b6115c3565b6111e9565b9050919050565b6115f8816115cd565b82525050565b600060208201905061161360008301846115ef565b92915050565b60008151905061162881611498565b92915050565b60006020828403121561164457611643611246565b5b600061165284828501611619565b91505092915050565b600082825260208201905092915050565b7f4f776e657273686970206f6620737065636966696564204e465420746f6b656e60008201527f20697320756e646572206120646966666572656e742077616c6c65742074686160208201527f6e207468652063616c6c65722773000000000000000000000000000000000000604082015250565b60006116ee604e8361165b565b91506116f98261166c565b606082019050919050565b6000602082019050818103600083015261171d816116e1565b9050919050565b600060408201905061173960008301856111da565b611746602083018461132e565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611787826111e9565b9150611792836111e9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117c7576117c661174d565b5b828201905092915050565b60006117dd826111e9565b91506117e8836111e9565b9250828210156117fb576117fa61174d565b5b828203905092915050565b600061182161181c611817846111a8565b6115c3565b6111a8565b9050919050565b600061183382611806565b9050919050565b600061184582611828565b9050919050565b6118558161183a565b82525050565b600060608201905061187060008301866111da565b61187d602083018561184c565b61188a60408301846115ef565b949350505050565b7f4e465420636f6e7472616374206d75737420626520612076616c69642061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006118ee60248361165b565b91506118f982611892565b604082019050919050565b6000602082019050818103600083015261191d816118e1565b9050919050565b7f4e465420746f6b656e204944206d757374206265203e20300000000000000000600082015250565b600061195a60188361165b565b915061196582611924565b602082019050919050565b600060208201905081810360008301526119898161194d565b9050919050565b7f50726f7669646564204e465420636f6e74726163742061646472657373206d7560008201527f737420696d706c656d656e74204552432d37323120696e746572666163650000602082015250565b60006119ec603e8361165b565b91506119f782611990565b604082019050919050565b60006020820190508181036000830152611a1b816119df565b9050919050565b7f5072656d69756d206d757374206265203e203000000000000000000000000000600082015250565b6000611a5860138361165b565b9150611a6382611a22565b602082019050919050565b60006020820190508181036000830152611a8781611a4b565b9050919050565b7f537472696b65207072696365206d757374206265203e20300000000000000000600082015250565b6000611ac460188361165b565b9150611acf82611a8e565b602082019050919050565b60006020820190508181036000830152611af381611ab7565b9050919050565b7f45787069726174696f6e20696e74657276616c206d757374206265203e203000600082015250565b6000611b30601f8361165b565b9150611b3b82611afa565b602082019050919050565b60006020820190508181036000830152611b5f81611b23565b9050919050565b6000611b71826111e9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ba357611ba261174d565b5b600182019050919050565b6000819050919050565b600060ff82169050919050565b6000611be0611bdb611bd684611bae565b6115c3565b611bb8565b9050919050565b611bf081611bc5565b82525050565b6000602082019050611c0b6000830184611be7565b9291505056fea2646970667358221220494ed3d25f4d657370e432f9934fc27d79f6bf99c05e78927370ee236d1131cd64736f6c634300080e0033";

type NFTOptConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTOptConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTOpt__factory extends ContractFactory {
  constructor(...args: NFTOptConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTOpt> {
    return super.deploy(overrides || {}) as Promise<NFTOpt>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTOpt {
    return super.attach(address) as NFTOpt;
  }
  override connect(signer: Signer): NFTOpt__factory {
    return super.connect(signer) as NFTOpt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTOptInterface {
    return new utils.Interface(_abi) as NFTOptInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFTOpt {
    return new Contract(address, _abi, signerOrProvider) as NFTOpt;
  }
}
