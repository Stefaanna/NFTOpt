/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTOpt, NFTOptInterface } from "../../contracts/NFTOpt";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_optionId",
        type: "uint32",
      },
    ],
    name: "cancelOption",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_optionId",
        type: "uint32",
      },
    ],
    name: "createOption",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_optionId",
        type: "uint32",
      },
    ],
    name: "exerciseOption",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optionID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "options",
    outputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nftId",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "startDate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "interval",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "enum NFTOpt.OptionFlavor",
        name: "flavor",
        type: "uint8",
      },
      {
        internalType: "enum NFTOpt.OptionState",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nftId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_premium",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_interval",
        type: "uint32",
      },
      {
        internalType: "enum NFTOpt.OptionFlavor",
        name: "_flavor",
        type: "uint8",
      },
    ],
    name: "publishOptionRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_optionId",
        type: "uint32",
      },
    ],
    name: "withdrawOptionRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ed8806100206000396000f3fe60806040526004361061007b5760003560e01c8063409e22051161004e578063409e22051461010e5780635a3ddf22146101545780636e89319a14610170578063d0a3021e1461018c5761007b565b806312065fe01461008057806318b7edeb146100ab5780631912cff8146100d6578063292a274f146100f2575b600080fd5b34801561008c57600080fd5b506100956101a8565b6040516100a29190610785565b60405180910390f35b3480156100b757600080fd5b506100c06101b0565b6040516100cd9190610785565b60405180910390f35b6100f060048036038101906100eb9190610890565b6101b6565b005b61010c6004803603810190610107919061091d565b610662565b005b34801561011a57600080fd5b506101356004803603810190610130919061094a565b610665565b60405161014b9a99989796959493929190610a54565b60405180910390f35b61016e6004803603810190610169919061091d565b610763565b005b61018a6004803603810190610185919061091d565b610766565b005b6101a660048036038101906101a1919061091d565b610769565b005b600047905090565b60015481565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603610225576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021c90610b73565b60405180910390fd5b60008563ffffffff161161026e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026590610bdf565b60405180910390fd5b600084116102b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a890610c4b565b60405180910390fd5b833373ffffffffffffffffffffffffffffffffffffffff1631101561030b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030290610cdd565b60405180910390fd5b6000831161034e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034590610d49565b60405180910390fd5b60008263ffffffff1611610397576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038e90610db5565b60405180910390fd5b6040518061014001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018663ffffffff168152602001600063ffffffff1681526020018363ffffffff16815260200185815260200184815260200182600181111561043c5761043b610995565b5b81526020016000600281111561045557610454610995565b5b8152506002600060016000815461046b90610e04565b919050819055815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160186101000a81548163ffffffff021916908363ffffffff16021790555060a082015181600201601c6101000a81548163ffffffff021916908363ffffffff16021790555060c0820151816003015560e082015181600401556101008201518160050160006101000a81548160ff0219169083600181111561060957610608610995565b5b02179055506101208201518160050160016101000a81548160ff0219169083600281111561063a57610639610995565b5b0217905550905050836000808282546106539190610e4c565b92505081905550505050505050565b50565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900463ffffffff16908060020160189054906101000a900463ffffffff169080600201601c9054906101000a900463ffffffff16908060030154908060040154908060050160009054906101000a900460ff16908060050160019054906101000a900460ff1690508a565b50565b50565b50565b6000819050919050565b61077f8161076c565b82525050565b600060208201905061079a6000830184610776565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107d0826107a5565b9050919050565b6107e0816107c5565b81146107eb57600080fd5b50565b6000813590506107fd816107d7565b92915050565b600063ffffffff82169050919050565b61081c81610803565b811461082757600080fd5b50565b60008135905061083981610813565b92915050565b6108488161076c565b811461085357600080fd5b50565b6000813590506108658161083f565b92915050565b6002811061087857600080fd5b50565b60008135905061088a8161086b565b92915050565b60008060008060008060c087890312156108ad576108ac6107a0565b5b60006108bb89828a016107ee565b96505060206108cc89828a0161082a565b95505060406108dd89828a01610856565b94505060606108ee89828a01610856565b93505060806108ff89828a0161082a565b92505060a061091089828a0161087b565b9150509295509295509295565b600060208284031215610933576109326107a0565b5b60006109418482850161082a565b91505092915050565b6000602082840312156109605761095f6107a0565b5b600061096e84828501610856565b91505092915050565b610980816107c5565b82525050565b61098f81610803565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106109d5576109d4610995565b5b50565b60008190506109e6826109c4565b919050565b60006109f6826109d8565b9050919050565b610a06816109eb565b82525050565b60038110610a1d57610a1c610995565b5b50565b6000819050610a2e82610a0c565b919050565b6000610a3e82610a20565b9050919050565b610a4e81610a33565b82525050565b600061014082019050610a6a600083018d610977565b610a77602083018c610977565b610a84604083018b610977565b610a91606083018a610986565b610a9e6080830189610986565b610aab60a0830188610986565b610ab860c0830187610776565b610ac560e0830186610776565b610ad36101008301856109fd565b610ae1610120830184610a45565b9b9a5050505050505050505050565b600082825260208201905092915050565b7f4e465420746f6b656e20636f6e7472616374206d75737420626520612076616c60008201527f6964206164647265737300000000000000000000000000000000000000000000602082015250565b6000610b5d602a83610af0565b9150610b6882610b01565b604082019050919050565b60006020820190508181036000830152610b8c81610b50565b9050919050565b7f4e465420746f6b656e204944206d757374206265203e20300000000000000000600082015250565b6000610bc9601883610af0565b9150610bd482610b93565b602082019050919050565b60006020820190508181036000830152610bf881610bbc565b9050919050565b7f5072656d69756d206d757374206265203e203000000000000000000000000000600082015250565b6000610c35601383610af0565b9150610c4082610bff565b602082019050919050565b60006020820190508181036000830152610c6481610c28565b9050919050565b7f43616c6c6572206973206d697373696e672072657175697265642066756e647360008201527f20746f20737570706c79207072656d69756d20616d6f756e7400000000000000602082015250565b6000610cc7603983610af0565b9150610cd282610c6b565b604082019050919050565b60006020820190508181036000830152610cf681610cba565b9050919050565b7f537472696b65207072696365206d757374206265203e20300000000000000000600082015250565b6000610d33601883610af0565b9150610d3e82610cfd565b602082019050919050565b60006020820190508181036000830152610d6281610d26565b9050919050565b7f45787069726174696f6e20696e74657276616c206d757374206265203e203000600082015250565b6000610d9f601f83610af0565b9150610daa82610d69565b602082019050919050565b60006020820190508181036000830152610dce81610d92565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0f8261076c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e4157610e40610dd5565b5b600182019050919050565b6000610e578261076c565b9150610e628361076c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e9757610e96610dd5565b5b82820190509291505056fea2646970667358221220f9beff5efcff4a10bf9231c07c9860b294717e3310b428904a2a22d3e577057f64736f6c634300080e0033";

type NFTOptConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTOptConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTOpt__factory extends ContractFactory {
  constructor(...args: NFTOptConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTOpt> {
    return super.deploy(overrides || {}) as Promise<NFTOpt>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTOpt {
    return super.attach(address) as NFTOpt;
  }
  override connect(signer: Signer): NFTOpt__factory {
    return super.connect(signer) as NFTOpt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTOptInterface {
    return new utils.Interface(_abi) as NFTOptInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFTOpt {
    return new Contract(address, _abi, signerOrProvider) as NFTOpt;
  }
}
